package com.xcontent.security.model;

import lombok.Data;
import org.springframework.data.annotation.Id;
import org.springframework.data.mongodb.core.mapping.Document;
import org.springframework.security.core.GrantedAuthority;
import org.springframework.security.core.userdetails.UserDetails;
import java.util.*;

@Data
@Document(collection = "users")
public class User implements UserDetails {
    @Id
    private String id;
    private String username;
    private String email;
    private String password;
    private boolean enabled;
    private boolean accountNonExpired;
    private boolean accountNonLocked;
    private boolean credentialsNonExpired;
    private Set<Role> roles;
    private Set<String> permissions;
    private Map<String, Object> attributes;
    private String provider;
    private String providerId;
    private Long lastLoginAt;
    private Long createdAt;
    private Long updatedAt;
}

@Data
@Document(collection = "roles")
public class Role implements GrantedAuthority {
    @Id
    private String id;
    private String name;
    private String description;
    private Set<String> permissions;
    private RoleType type;
    private Long createdAt;
    private Map<String, Object> metadata;

    @Override
    public String getAuthority() {
        return "ROLE_" + name;
    }
}

@Data
@Document(collection = "api_keys")
public class ApiKey {
    @Id
    private String id;
    private String name;
    private String key;
    private String secret;
    private String userId;
    private Set<String> scopes;
    private ApiKeyStatus status;
    private Long expiresAt;
    private Long createdAt;
    private Long lastUsedAt;
    private Map<String, Object> metadata;
    private List<ApiKeyUsage> usage;
}

@Data
@Document(collection = "security_audit_logs")
public class SecurityAuditLog {
    @Id
    private String id;
    private String userId;
    private String action;
    private String resource;
    private String ipAddress;
    private String userAgent;
    private Map<String, Object> details;
    private AuditStatus status;
    private Long timestamp;
    private byte[] encryptedData;
    private String encryptionKeyId;
}

public enum RoleType {
    SYSTEM,
    ORGANIZATION,
    PROJECT,
    CUSTOM
}

public enum ApiKeyStatus {
    ACTIVE,
    EXPIRED,
    REVOKED,
    SUSPENDED
}

public enum AuditStatus {
    SUCCESS,
    FAILURE,
    WARNING
}
