package com.xcontent.model;

import lombok.Data;
import org.springframework.data.annotation.Id;
import org.springframework.data.mongodb.core.mapping.Document;
import java.util.*;

@Data
@Document(collection = "template_schedules")
public class TemplateSchedule {
    @Id
    private String id;
    private String templateId;
    private String version;
    private ScheduleType type;
    private ScheduleStatus status;
    private Long scheduledAt;
    private Long executedAt;
    private String createdBy;
    private Map<String, Object> parameters;
    private List<ScheduleCondition> conditions;
    private List<ScheduleAction> actions;
    private List<ScheduleNotification> notifications;
}

@Data
@Document(collection = "template_lifecycle")
public class TemplateLifecycle {
    @Id
    private String id;
    private String templateId;
    private String version;
    private LifecyclePhase currentPhase;
    private Long effectiveFrom;
    private Long effectiveUntil;
    private boolean isArchived;
    private String archivedBy;
    private Long archivedAt;
    private Map<String, Object> metadata;
    private List<LifecycleTransition> transitions;
}

@Data
public class ScheduleCondition {
    private String type;
    private String expression;
    private Map<String, Object> parameters;
    private boolean isRequired;
}

@Data
public class ScheduleAction {
    private String type;
    private ActionTiming timing;
    private Map<String, Object> parameters;
    private List<String> dependencies;
    private int retryCount;
    private Long retryDelay;
}

@Data
public class ScheduleNotification {
    private String type;
    private List<String> recipients;
    private String template;
    private Map<String, Object> parameters;
    private NotificationTiming timing;
}

@Data
public class LifecycleTransition {
    private String id;
    private LifecyclePhase fromPhase;
    private LifecyclePhase toPhase;
    private Long transitionAt;
    private String triggeredBy;
    private TransitionType type;
    private Map<String, Object> metadata;
}

public enum ScheduleType {
    VERSION_SWITCH,
    ARCHIVE,
    EXPIRATION,
    MAINTENANCE
}

public enum ScheduleStatus {
    PENDING,
    ACTIVE,
    EXECUTED,
    FAILED,
    CANCELLED
}

public enum ActionTiming {
    BEFORE,
    DURING,
    AFTER,
    ON_ERROR
}

public enum NotificationTiming {
    BEFORE_SCHEDULE,
    ON_EXECUTION,
    ON_COMPLETION,
    ON_FAILURE
}

public enum LifecyclePhase {
    DRAFT,
    REVIEW,
    ACTIVE,
    DEPRECATED,
    ARCHIVED
}

public enum TransitionType {
    AUTOMATIC,
    MANUAL,
    SCHEDULED,
    FORCED
}
